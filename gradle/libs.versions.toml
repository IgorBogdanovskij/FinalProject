[versions]
# SDK
minSdk = "24"
roomRxjava3 = "2.6.1"
rxandroid = "3.0.0"
rxjava = "3.1.0"
rxjava3RetrofitAdapter = "3.0.0"
targetSdk = "34"
compileSdk = "34"

# Core
agp = "8.7.3"
kotlin = "1.9.23"
# noinspection GradleDependency
ksp = "1.9.23-1.0.20"

# Coroutines
coroutines = "1.8.0"

# Android Core
androidxCore = "1.13.1"
androidxSupport = "1.7.0"
lifecycleKtx = "2.8.6"
navigation = "2.8.3"
security = "1.1.0-alpha06"

# View
splash = "1.0.1"
coordinatorLayout = "1.2.0"
constrainLayout = "2.1.4"
recyclerView = "1.3.2"
material = "1.12.0"
swipeRefreshView = "1.1.0"
flexboxLayout = "3.0.0"
swipeLayout = "1.2.0"
otpView = "v1.1.2-ktx"
mpChart = "v3.1.0"
markwon = "4.6.2"
lottie = "6.4.0"
inputMask = "6.1.0"

# Camera
camera = "1.4.0-rc04"

# Dependency Injection
javaxInject = "1"
hilt = "2.51"

# Data
workManager = "2.9.1"
hiltWorkManager = "1.2.0"
hiltWorkManagerCompiler = "1.2.0"
preferences = "1.2.1"
room = "2.6.1"
sqlCipher = "4.5.4"
paging = "3.3.2"

# Network
retrofit = "2.10.0"
okhttp = "5.0.0-alpha.14"

# Google services
googleServices = "4.4.2"
firebaseBom = "33.5.1"
firebaseAppDistribution = "5.0.0"
locationServices = "21.3.0"
appReview = "2.0.2"
appUpdate = "2.1.0"
googleMaps = "3.4.0"
googleMapsKtx = "3.4.0"
playServicesMaps = "19.0.0"

# AWS Recognition
awsAmplifyUi = "1.3.0"
awsAmplifyCognito = "2.23.0"

# Compose for AWS Recognition
composeUi = "1.7.4"
composeMaterial = "1.3.0"

# Analytics
sentryAndroid = "7.13.0"
sentryAndroidGradle = "4.11.0"
rudderStack = "1.22.0"

# Image loading
glide = "4.16.0"
glideTransform = "4.3.0"

# JWT
jwtJose = "9.37.3"

# Security
biometric = "1.2.0-alpha05"
rootBeer = "0.1.0"

# Tools
timber = "5.0.1"
adapterDelegates = "4.3.2"
iban = "1.14.0"
ccp = "2.7.3"
openingHoursParser = "0.28.2"

# Desugaring
desugaring = "2.1.2"

# Testing
jUnit = "4.13.2"
androidxTest = "1.6.2"
androidxTestRules = "1.6.1"
androidxTestJunit = "1.2.1"
androidxCoreTest = "1.6.1"
androidxFragmentTest = "1.8.4"
androidxArchCore = "2.2.0"
espresso = "3.6.1"
mockk = "1.13.10"
robolectric = "4.11.1"
coroutinesTest = "1.8.0"

# Development
leakCanary = "2.13"

[libraries]
# Core
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# Coroutines
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Android Core
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-compat = { module = "androidx.appcompat:appcompat", version.ref = "androidxSupport" }

live-data-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleKtx" }
room-rxjava3 = { module = "androidx.room:room-rxjava3", version.ref = "roomRxjava3" }
rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxandroid" }
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }
rxjava3-retrofit-adapter = { module = "com.github.akarnokd:rxjava3-retrofit-adapter", version.ref = "rxjava3RetrofitAdapter" }
view-model = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleKtx" }
process-lifecycle = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycleKtx" }
reactive-streams = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycleKtx" }
lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycleKtx" }

navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

androidx-security = { module = "androidx.security:security-crypto", version.ref = "security" }

# View
androidx-splash = { module = "androidx.core:core-splashscreen", version.ref = "splash" }
coordinator-layout = { module = "androidx.coordinatorlayout:coordinatorlayout", version.ref = "coordinatorLayout" }
constraint-layout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constrainLayout" }
recycler-view = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
material = { module = "com.google.android.material:material", version.ref = "material" }
swipe-refresh = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeRefreshView" }
flexbox-layout = { module = "com.google.android.flexbox:flexbox", version.ref = "flexboxLayout" }
swipe-layout = { module = "com.daimajia.swipelayout:library", version.ref = "swipeLayout" }
otp-view = { module = "com.github.aabhasr1:OtpView", version.ref = "otpView" }
mp-chart = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "mpChart" }
markwon = { module = "io.noties.markwon:core", version.ref = "markwon" }
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
input-mask = { module = "com.github.RedMadRobot:input-mask-android", version.ref = "inputMask" }

# Camera
camera = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
camera-view = { module = "androidx.camera:camera-view", version.ref = "camera" }
camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }

# Dependency Injection
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

# Data
preferences = { module = "androidx.preference:preference-ktx", version.ref = "preferences" }

work-manager = { module = "androidx.work:work-runtime", version.ref = "workManager" }
work-manager-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
hilt-work-manager = { module = "androidx.hilt:hilt-work", version.ref = "hiltWorkManager" }
hilt-work-manager-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltWorkManagerCompiler" }

room = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sql-cipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "sqlCipher" }
paging = { module = "androidx.paging:paging-runtime", version.ref = "paging" }

# Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Google services
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
location-services = { module = "com.google.android.gms:play-services-location", version.ref = "locationServices" }
app-review = { module = "com.google.android.play:review", version.ref = "appReview" }
app-review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "appReview" }

app-update = { module = "com.google.android.play:app-update", version.ref = "appUpdate" }
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdate" }

google-maps = { module = "com.google.maps.android:android-maps-utils", version.ref = "googleMaps" }
google-maps-ktx = { module = "com.google.maps.android:maps-utils-ktx", version.ref = "googleMapsKtx" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }

# AWS Recognition
aws-amplify-ui = { module = "com.amplifyframework.ui:liveness", version.ref = "awsAmplifyUi" }
aws-amplify-cognito = { module = "com.amplifyframework:aws-auth-cognito", version.ref = "awsAmplifyCognito" }

# Compose for AWS Recognition
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeUi" }
compose-material = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial" }

# Analytics
sentry = { module = "io.sentry:sentry-android", version.ref = "sentryAndroid" }
rudderstack-core = { module = "com.rudderstack.android.sdk:core", version.ref = "rudderStack" }

# Image loading
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-okhttp = { module = "com.github.bumptech.glide:okhttp3-integration", version.ref = "glide" }
glide-processor = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
glide-transform = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransform" }

# JWT
jwt-jose = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "jwtJose" }

# Security
biometric = { module = "androidx.biometric:biometric-ktx", version.ref = "biometric" }
root-beer = { module = "com.scottyab:rootbeer-lib", version.ref = "rootBeer" }

# Tools
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
adapter-delegates = { module = "com.hannesdorfmann:adapterdelegates4", version.ref = "adapterDelegates" }
iban = { module = "nl.garvelink.oss:iban", version.ref = "iban" }
ccp = { module = "com.hbb20:ccp", version.ref = "ccp" }
opening-hours-parser = { module = "ch.poole:OpeningHoursParser", version.ref = "openingHoursParser" }

# Desugaring
desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugaring" }

# Testing
junit = { module = "junit:junit", version.ref = "jUnit" }
androidx-test-fragment = { module = "androidx.fragment:fragment-testing", version.ref = "androidxFragmentTest" }
androidx-arch-test-core = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCore" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTest" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidxTestRules" }
androidx-test-core = { module = "androidx.test:core-ktx", version.ref = "androidxCoreTest" }
androidx-test-ext = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestJunit" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockk-core = { module = "io.mockk:mockk", version.ref = "mockk" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# Development
leak-canary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

[plugins]
build-logic = { id = "build.logic.plugin" }

android-library = { id = "com.android.library", version.ref = "agp" }
android-application = { id = "com.android.application", version.ref = "agp" }

kotlin-jwm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebase-app-distribution = { id = "com.google.firebase.appdistribution", version.ref = "firebaseAppDistribution" }
sentry-android-gradle = { id = "io.sentry.android.gradle", version.ref = "sentryAndroidGradle" }
