[versions]
# SDK
minSdk = "24"
targetSdk = "35"
compileSdk = "35"

# Core
agp = "8.7.3"
kotlin = "2.0.21"
ksp = "2.0.21-1.0.27"

# RxJava
rxandroid = "3.0.0"
rxjava = "3.1.0"
rxjava3RetrofitAdapter = "3.0.0"

# Coroutines
coroutines = "1.8.0"

# Android Core
androidxCore = "1.13.1"
androidxSupport = "1.7.0"
lifecycleKtx = "2.8.6"
fragmentKtx = "1.8.5"
lifecycleExtensions = "2.2.0"

# View
constrainLayout = "2.1.4"
material = "1.12.0"
blurry = "4.0.0"
swipeRefreshLayout = "1.1.0"

# Dependency Injection
javaxInject = "1"
hilt = "2.51"
dagger = "2.51"

# Data
room = "2.6.1"
sqlCipher = "4.5.4"
roomRxjava3 = "2.6.1"

# Network
retrofit = "2.10.0"
okhttp = "5.0.0-alpha.14"
gson = "2.10.1"

# JetpackCompose
compose = "2025.01.00"

# Image loading
glide = "4.16.0"
glideTransform = "4.3.0"

# Testing
jUnit = "4.13.2"
mockk = "1.13.10"
coroutinesTest = "1.8.0"
androidxJUnit = "1.2.1"

# Development
leakCanary = "2.13"

[libraries]
# Core
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
blurry = { module = "jp.wasabeef:blurry", version.ref = "blurry" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# RxJava
rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxandroid" }
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }
rxjava3-retrofit-adapter = { module = "com.github.akarnokd:rxjava3-retrofit-adapter", version.ref = "rxjava3RetrofitAdapter" }

# Coroutines
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Android Core
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-compat = { module = "androidx.appcompat:appcompat", version.ref = "androidxSupport" }
live-data-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleKtx" }
view-model = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleKtx" }

# View
constraint-layout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constrainLayout" }
material = { module = "com.google.android.material:material", version.ref = "material" }
swipe-refresh-layout = { group = "androidx.swiperefreshlayout", name = "swiperefreshlayout", version.ref = "swipeRefreshLayout" }

# Dependency Injection
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
google-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
google-dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# Data
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
room-rxjava3 = { module = "androidx.room:room-rxjava3", version.ref = "roomRxjava3" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sql-cipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "sqlCipher" }

# Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# JetpackCompose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material = { module = "androidx.compose.material3:material3" }
compose-activity = { module = "androidx.activity:activity-compose" }

# Image loading
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-transform = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransform" }

# Testing
junit = { module = "junit:junit", version.ref = "jUnit" }
mockk-core = { module = "io.mockk:mockk", version.ref = "mockk" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxJUnit" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# Development
leak-canary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

[plugins]
android-library = { id = "com.android.library", version.ref = "agp" }
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-jwm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
